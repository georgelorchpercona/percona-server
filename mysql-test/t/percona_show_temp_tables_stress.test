--source include/have_innodb.inc

--source include/has_tokudb.inc

--source include/count_sessions.inc

delimiter |;

CREATE PROCEDURE query_temp_tables ()
  WHILE TRUE DO
    SELECT * FROM INFORMATION_SCHEMA.GLOBAL_TEMPORARY_TABLES;
  END WHILE|

delimiter ;|

connect (con1,localhost,root,,);
--let $con1_id= `SELECT connection_id()`
send CALL query_temp_tables();

connection default;

--let $i=400
--echo # Creating 400 temp tables with each of MyISAM, InnoDB, MEMORY, and possibly TokuDB
--disable_query_log
while ($i)
{
  --eval CREATE TEMPORARY TABLE tmp_myisam_$i (a VARCHAR(256)) ENGINE=MyISAM
  --eval CREATE TEMPORARY TABLE tmp_innodb_$i (a VARCHAR(256)) ENGINE=InnoDB
  --eval CREATE TEMPORARY TABLE tmp_memory_$i (a VARCHAR(256)) ENGINE=MEMORY
  if ($HAS_TOKUDB)
  {
    --eval CREATE TEMPORARY TABLE tmp_tokudb_$i (a VARCHAR(256)) ENGINE=TokuDB
  }
  --dec $i
}
--enable_query_log
--let $table_count=`SELECT COUNT(*) FROM INFORMATION_SCHEMA.GLOBAL_TEMPORARY_TABLES`
if ($HAS_TOKUDB == 0)
{
  if ($table_count != 1200)
  {
    --die ERROR IN TEST: Expected count of I_S.GLOBAL_TEMPORARY_TABLES to be 1200.
  }
}
if ($HAS_TOKUDB == 1)
{
  if ($table_count != 1600)
  {
    --die ERROR IN TEST: Expected count of I_S.GLOBAL_TEMPORARY_TABLES to be 1600.
  }
}

--let $i=400
--echo # Dropping the temp tables
--disable_query_log
while ($i)
{
  --eval DROP TEMPORARY TABLE tmp_myisam_$i
  --eval DROP TEMPORARY TABLE tmp_innodb_$i
  --eval DROP TEMPORARY TABLE tmp_memory_$i
  if ($HAS_TOKUDB)
  {
    --eval DROP TEMPORARY TABLE tmp_tokudb_$i
  }
  --dec $i
}
--enable_query_log

--echo KILL QUERY \$con1_id
--disable_query_log
eval KILL QUERY $con1_id;
--enable_query_log

connection con1;
--disable_result_log
--error ER_QUERY_INTERRUPTED
reap;
--enable_result_log
disconnect con1;

connection default;

DROP PROCEDURE query_temp_tables;

--source include/wait_until_count_sessions.inc
